//// -- LEVEL 1
//// -- Schemas, Tables and References

// Creating tables
// You can define the tables with full schema names
Table Projects as P {
  Id int [pk, increment]
  ManagerId int [ref: > U.Id]
  DateId int [ref: > D.Id]
  UsersOnProjectId int  [ref: > UOP.Id]
  ProjectStatus int
  Description string
  Indexes {
    (Id) [pk]
  }
}

// If schema name is omitted, it will default to "public" schema.
Table Users as U {
  Id int [pk, increment] // auto-increment
  FirstName string
  LastName string
  UserName string
  PassWord string
}

Table Tasks as T{
  Id int [pk, increment]
  NoteId int [ref: > TN.Id]
  UsersOnTasksId int [ref: > UOT.Id]
  ProjectId int  [ref: > P.Id]
  DateId int [ref: > D.Id]
  Description string
  TaskStatus int
 }

Table Dates as D{
Id int [pk, increment]
CreatedDate datetime
LastModified datetime
DeadLine datetime
Finished datetime
}

Table UsersOnTasks as UOT{
Id int [pk, increment]
UserId int [ref: > U.Id]
}

Table UsersOnProject as UOP{
Id int [pk, increment]
UserId int [ref: > U.Id]
}

Table TaskNotes as TN{
Id int [pk, increment]
Note string 
}

// Creating references
// You can also define relaionship separately
// > many-to-one; < one-to-many; - one-to-one; <> many-to-many
